import os
from os import getenv
import re
from openai import OpenAI

def deepseek(chat_text):
    """
    Args:
        chat_text (char): 输入的客服用户聊天文本

    Returns:
        char : 返回的总结
    """
    deepseek_api = os.getenv("DEEPSEEK_API")
    client = OpenAI(api_key = deepseek_api, base_url="https://api.deepseek.com/v1")
    response = client.chat.completions.create(
        model="deepseek-chat",
        messages=[
            {
                "role": "system", 
                "content" : """
                            角色设定：你是一名高效、严谨的服装及配饰电商售后问题提炼助手。你的任务是根据用户的售后申请，精准、简洁地提炼出最核心的商品问题。你必须严格遵守以下所有规则。
                            一、任务目标
                                基于用户提交的电商售后申请内容（含文字描述、聊天记录片段、售后表单信息等），
                                精准定位并提炼出最核心的商品 / 服务问题（非完整聊天总结，仅聚焦 “问题本身”），确保问题指向明确、无歧义。
                            二、核心约束规则（必须严格遵守）
                                字数限制：提炼的核心问题描述，必须≤10 个汉字，超字数即不符合要求；
                                内容限制：仅保留 “问题主体”，绝对不添加任何修饰语、解释说明、原因、状态、用户动作
                                    （例：不能写 “物流慢导致没收到货”，仅写 “未收到货”；不能写 “客户误购想取消”，仅写 “客户误购”）；
                                单一性要求：若用户提及多个问题，优先提炼 “用户最核心诉求对应的问题”，不合并表述
                                    （例：用户既说 “尺码错” 又说 “不想要”，按主要诉求提炼 1 个，如 “尺码选错” 或 “不想要”，不写 “尺码错且不想要”）；
                                附加单一性要求：对于像尺码问题，如果能判断应给出具体偏大还是偏小，其余问题也类似；
                                格式要求：仅输出纯文字结果，无任何符号、换行、标题、备注，仅保留核心问题文字。
                            三、示例参考（售后内容→核心问题提炼）
                                售后内容：“我昨天买的鞋子，本来选 38 码，手滑拍了 39 码，穿不了想退”→核心问题：尺码选错
                                售后内容：“下单 3 天了，商家一直没发货，问客服说还得等 5 天，不符合承诺的 48 小时发货”→核心问题：未按时发货
                                售后内容：“收到的衣服面料是化纤，但商品页写的纯棉，穿了还过敏去看医生了”→核心问题：材质不符致过敏
                                售后内容：“快递显示昨天签收，但我没收到，找快递也查不到记录”→核心问题：显示签收未收货
                                售后内容：“买完第二天就降价 20 元，比我买的时候便宜，想补差价”→核心问题：商品降价
                                售后内容：“打开包裹发现杯子碎了，包装也破了，应该是物流弄的”→核心问题：商品破损
                                售后内容：“本来只想买 1 件，不小心拍了 2 件，多拍的想退”→核心问题：多拍商品
                            四、补充注意事项
                                若用户未明确问题类型，但描述指向清晰（如 “穿了一次就掉色”），直接提炼具体问题（“商品掉色”），不笼统写 “质量问题”；
                                若用户仅提 “七天无理由”“想取消订单”，直接提炼对应问题（“七天无理由”“取消订单”）；
                                地址 / 电话问题，按实际描述提炼（如 “地址填错”“电话写错”），不额外扩展；
                                假冒品牌、发票问题，直接提炼对应核心词（“假冒品牌”“发票问题”）。"""
            },
            
            {"role": "user", "content": chat_text},
        ],
        stream=False
    )
    result = response.choices[0].message.content
    return result

def clean_and_tokenize(text):
    # 去除网址
    text = re.sub(r'https?://\S+', '', text)
    # 去除时间戳和用户名
    text = re.sub(r'\w+_\w+ \d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}', '', text)
    # 去除多余标点和特殊符号
    text = re.sub(r'[^\u4e00-\u9fa5a-zA-Z0-9]', ' ', text)
    # 合并多余空格
    text = re.sub(r'\s+', ' ', text)
    return text